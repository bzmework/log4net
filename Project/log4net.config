<?xml version="1.0"?>
<!--参见: http://logging.apache.org/log4net/release/manual/configuration.html -->
<configuration>
  <!--配置段-->
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <!--配置日志-->
  <log4net>
    <root>
      <!--设置日志级别, 默认值为DEBUG, 
          级别由低到高依次为: ALL|DEBUG<INFO<WARN<ERROR<FATAL|OFF. 其中:
          ALL表示记录所有日志;
          OFF表示不记录日志, 即关闭日志记录;
          其它则按级别记录，例如级别设置成WARN，则低于WARN级别的INFO和DEBUG日志将不会被记录, 其它依次类推.
      -->
      <level value="ALL"/>
      
      <!--定义输出源, 可以定义多个输出源, 
          例如你可以按日志级别或业务模块等定义多个输出源, 对日志进行分类记录.
          下面仅定义了一个输出源 -->
      <appender-ref ref="RollingFileAppender"/>
    </root>
    <!--输出源设置-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名, 
          如果RollingStyle为Composite或Date, 则这里一般设置成目录名, 文件名在DatePattern里设置;
          如果RollingStyle为其他滚动方式, 则必须设置成文件名 -->
      <file value="log\\"/>

      <!--是否是静态的日志文件名, 即固定的日志文件名称, 
          如果你想要动态生成日志文件名，例如将RollingStyle设置成Date或Composite, 以让系统自动生成日志文件的名称,
          那么你必须将staticLogFileName设置成false -->
      <staticLogFileName value="false"/>
      
      <!--日志滚动方式，可设置成:
          Size(按文件), 此时你应该将file的值设置成一个固定的名称, 例如: test.log 或 log\\test.log 或 c:\\log\\test.log;
          Date(按日期), 此时你应该将file的值设置成一个目录或者空字符串, 如果设置成空字符串, 系统将把日志记录在当前应用程序所在的目录中;
          Composite(按日期及文件)，默认为Composite -->
      <RollingStyle value="Composite"/>
      
      <!--日志文件名格式, 
          当RollingStyle为Composite或Date, 在此处设置日志文件名的格式时, 
          固定不变的部分用单引号括起来, 其它部分则设置成日期格式 -->
      <datePattern value="yyyyMMdd'.log'"/>
      
      <!--日志记录是否追加到文件, 
          默认为true, 表示将记录追加到文件尾部;
          flase, 表示覆盖已有的日志文件记录 -->
      <appendToFile value="true"/>
      
      <!--单个日志文件的最大尺寸, 
          可用的单位有: KB|MB|GB, 默认为字节(不带单位) -->
      <maximumFileSize value="2MB"/>
      
      <!--每日最多记录的日志文件个数 -->
      <maxSizeRollBackups value="10"/>
      
      <!--单个日志文件超限后日志备份方式, 默认值为-1,
          当日志文件超过MaximumFileSize大小时，系统根据CountDirection的值来备份日志文件:
          (1)当此值设置成>-1时, 则根据file里指定的文件名依次按0,1,2...递增创建日志备份, 直到数量等于MaxSizeRollBackups参数值为止，
             以后的日志记录则会根据maximumFileSize循环写入file, 当filesize>maximumFileSize, 进行一次新的循环写入时, 会将file记录写入备份日志, 并对备份日志进行重新编号;
          (2)当此值设置成<=-1时, 则根据file里指定的文件名依次按0,1,2...递增创建日志备份, 直到数量等于MaxSizeRollBackups参数值为止，
             以后的日志记录则会根据maximumFileSize循环写入file, 当filesize>maximumFileSize, 进行一次新的循环写入时, 不会将file记录写入备份日志, 即备份日志被固化不受影响 -->
      <countDirection value="-1"/>

      <!--日志样式:
          %m(message):    输出的日志消息;
          %n(newline):    换行;
          %d(datetime):   输出当前语句运行的时刻;
          %r(runtime):    输出程序从运行到执行到当前语句时消耗的毫秒数;
          %t(threadid):   当前语句所在的线程ID;
          %p(priority):   日志的当前日志级别;
          %c(class):      当前日志对象的名称;
          %L:             输出语句所在的行号;
          %F:             输出语句所在的文件名;
          %-10:           表示最小长度为10，如果不够，则用空格填充; -->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="--------时间: %d, 耗时: %r(ms), 类型: %-5p --------%n对象: %c%n详情: %m%n%n %-1000"/>
      </layout>
      
      <!--日志锁定模式, 下面的设置是: 多线程时采用最小锁定 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
    </appender>
  </log4net>
</configuration>
